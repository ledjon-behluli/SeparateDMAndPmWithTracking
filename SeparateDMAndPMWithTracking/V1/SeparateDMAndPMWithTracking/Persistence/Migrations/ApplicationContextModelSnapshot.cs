// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeparateDMAndPMWithTracking.Persistence;

namespace SeparateDMAndPMWithTracking.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeparateDMAndPMWithTracking.Persistence.Entities.PublisherAccountEnitity", b =>
                {
                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublisherId", "SocialAccountId");

                    b.HasIndex("SocialAccountId");

                    b.ToTable("PublisherAccount");
                });

            modelBuilder.Entity("SeparateDMAndPMWithTracking.Persistence.Entities.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("SeparateDMAndPMWithTracking.Persistence.Entities.SocialAccountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialAccount");
                });

            modelBuilder.Entity("SeparateDMAndPMWithTracking.Persistence.Entities.PublisherAccountEnitity", b =>
                {
                    b.HasOne("SeparateDMAndPMWithTracking.Persistence.Entities.PublisherEntity", "Publisher")
                        .WithMany("PublisherAccounts")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeparateDMAndPMWithTracking.Persistence.Entities.SocialAccountEntity", "SocialAccount")
                        .WithMany("PublisherAccounts")
                        .HasForeignKey("SocialAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
